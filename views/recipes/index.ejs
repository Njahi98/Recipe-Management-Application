<!DOCTYPE html>
<html lang="en">
  <%-include('../partials/head.ejs')%>
  <body>
    <%-include('../partials/nav.ejs')%>
    <div class="page-container">

      <div id="content-wrap">
          <img src="/banner2.jpg" alt="">
          <div class="recipeCenterImgText">
            <p>RECIPES</p>
          </div>
          <div class="newRecipe">
            <div class="filter-inputs">
              <p style="transform: translateX(150%);">üîç</p>
              <input class="search-bar" type="text" name="search" placeholder="Search by title...">
              <select style="margin-left: 1rem;" class="category-bar">
                <option value="">category</option>
                <option value="Breakfast">Breakfast</option>
                <option value="Lunch">Lunch</option>
                <option value="Dinner">Dinner</option>
                <option value="Dessert">Dessert</option>
                <option value="Snack">Snack</option>
              </select>
              <select style="margin-left: 1rem;" class="difficulty-bar">
                <option value="">difficulty</option>
                <option value="Easy">Easy</option>
                <option value="Medium">Medium</option>
                <option value="Hard">Hard</option>
              </select>
              <div><p class="cooking-times-range-text" style="color: #333; margin: 0">Cooking Time(mins)</p><input type="range" name="cookingTimeRange" class="cooking-time-range" min="1" max="240">
              </div>
            </div>
            <a href="/recipes/create"><button class="newRecipeButton" >Add a new Recipe</button>
            </a>
          </div>
          <div class="recipe-container">
          <%  if(recipes.length){ %>
              <%   recipes.forEach((recipe)=>{ %>
                <div class="recipe-card">
                  <p style="margin: 0; color: #333;" class="recipe-title"><%=recipe.title %></p>
              <div style="display: flex;gap: 1rem;color: #666; ">
                 <p class="cooking-times" style="text-align: start;">üïõ <%=recipe.cookingTime %>min</p>
                  <p class="recipe-difficulty"> <%=recipe.difficulty %></p>
                  <p class="recipe-category"> <%=recipe.category %></p>
              </div> 
              <img src="/recipes/image/<%= recipe.imageId %>" alt="Current recipe image" style="max-width: 200px;">

                <p style="margin-top: 0; color: #555"><%=recipe.description %> <p>
                <div style="display: flex; justify-content: space-between ;">
                  <a href="/recipes/<%= recipe._id %>" class="viewRecipeBtn">View Recipe</a>
                  <button class="deleteRecipeBtn" data-doc="<%= recipe._id %>">Delete</button>
                </div>
                
                </div>
             <%  })  %>
            <%} %>
          
          </div>
      </div>

    <%-include('../partials/footer.ejs')%>
    <script>
    //delete button's function
  const trashcan = document.querySelector('.deleteRecipeBtn');
  trashcan.addEventListener('click', (e) => {
  const endpoint = `/recipes/${trashcan.dataset.doc}`;

  fetch(endpoint, {
    method: 'DELETE',
  })
  .then(response => response.json())
  .then(data => window.location.href = data.redirect)
  .catch(err => console.log(err));
});

//merged all filters in the same function
let filters = {
  title: "",
  category: "",
  difficulty: "",
  cookingTime: null,
};

function applyFilters() {
  recipeNames.forEach((recipeName) => {
    const parentCard = recipeName.parentElement;
    const matchesTitle = !filters.title || new RegExp(filters.title, 'i').test(recipeName.textContent.trim());
    const matchesCategory = !filters.category || parentCard.querySelector('.recipe-category').textContent.trim() === filters.category;
    const matchesDifficulty = !filters.difficulty || parentCard.querySelector('.recipe-difficulty').textContent.trim() === filters.difficulty;
    const matchesTime = !filters.cookingTime || parseInt(parentCard.querySelector('.cooking-times').textContent.replace(/[^0-9]/g, '')) <= filters.cookingTime;

    if (matchesTitle && matchesCategory && matchesDifficulty && matchesTime) {
      parentCard.style.display = "";
    } else {
      parentCard.style.display = "none";
    }
  });
}
//filter by title function
  const searchBar = document.querySelector('.search-bar')
  const recipeNames = document.querySelectorAll('.recipe-container .recipe-title')

  function filterByTitle() {
   filters.title = this.value.trim();
  applyFilters();
}

searchBar.addEventListener('keyup',filterByTitle);
searchBar.addEventListener('change',filterByTitle);

//filter by category
const categorySelect = document.querySelector('.category-bar')

function filterByCategory(){
  filters.category = this.value.trim();
  applyFilters();
}
categorySelect.addEventListener('change',filterByCategory)


//filter by difficulty
const difficultySelect = document.querySelector('.difficulty-bar')

function filterByDifficulty(){
  filters.difficulty=this.value.trim();
  applyFilters();
}
difficultySelect.addEventListener('change',filterByDifficulty)


//filter by cooking time
const cookingTimeRange= document.querySelector('.cooking-time-range');
const timetext = document.querySelector('.cooking-times-range-text')

function ShowRangeValue(){
let num=this.value;
timetext.textContent=`Cooking Time(mins) ${num}`
}
function filterbyTime(){
filters.cookingTime=this.value.trim();
applyFilters();
}

  cookingTimeRange.addEventListener('change',ShowRangeValue)
  cookingTimeRange.addEventListener('mousemove',ShowRangeValue)
  cookingTimeRange.addEventListener('change',filterbyTime)

    </script>
  </body>
</html>
